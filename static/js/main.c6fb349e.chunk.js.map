{"version":3,"sources":["assets/sun.jpg","assets/mercury.jpg","assets/venus.jpg","assets/earth.jpg","assets/mars.jpg","assets/jupiter.jpg","assets/saturn.jpg","assets/uranus.jpg","assets/neptune.jpg","GlobalStyles.js","components/Lights.js","components/CelestialObject.js","components/FallbackMesh.js","components/Stars.js","Controllers/TravelController.js","views/MainScene.js","components/Controls.js","App.js","index.js"],"names":["module","exports","createGlobalStyle","Canvas","styled","C","Light","setRef","type","color","intensity","CelestialObject","position","scale","textureURL","orbitRequired","texture","useLoader","TextureLoader","ref","attach","args","map","rotation","Math","PI","side","DoubleSide","defaultProps","FallbackMesh","Stars","starsGeometry","THREE","points","useMemo","Array","fill","star","x","randFloatSpread","y","z","setFromPoints","starsMaterial","TravelController","scene","camera","this","travelObjectType","travelStartEvent","CustomEvent","targetPosition","Vector3","threeDiameter","core","Object3D","objectCentroid","orbitCentroid","update","destinationX","destinationY","destinationZ","quadrant1","quadrant2","quadrant3","quadrant4","offset","data","event","detail","document","dispatchEvent","takeOffHeight","targetObject","animation","TWEEN","Tween","to","easing","Easing","Cubic","InOut","onStart","e","console","log","onUpdate","lookAt","cameraTarget","SceneUtils","detach","parent","updateMatrixWorld","dispatchTravelCompleteEvent","window","cancelAnimationFrame","currentPosition","dispatchTravelStartEvent","destinationCoordinates","calculateDestinationCoordinates","takeOff","prepareForTravel","start","onComplete","handleComplete","bind","delta","requestAnimationFrame","MainScene","sunRef","useRef","mercuryOrbitRef","mercuryRef","venusOrbitRef","venusRef","earthOrbitRef","earthRef","marsOrbitRef","marsRef","jupiterOrbitRef","jupiterRef","saturnOrbitRef","saturnRef","uranusOrbitRef","uranusRef","neptuneOrbitRef","neptuneRef","useThree","travelController","fov","aspect","innerWidth","innerHeight","near","far","useFrame","clock","current","elapsedTime","setTimeout","travelToObject","fallback","SunTexture","MercuryTexture","VenusTexture","EarthTexture","MarsTexture","JupiterTexture","SaturnTexture","UranusTexture","NeptuneTexture","extend","OrbitControls","Controls","gl","useRender","domElement","enableDamping","dampingFactor","rotateSpeed","App","ReactDOM","render","GlobalStyles","getElementById"],"mappings":"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","file":"static/js/main.c6fb349e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun.09a52bea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mercury.05a75c74.jpg\";","module.exports = __webpack_public_path__ + \"static/media/venus.814a2921.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earth.45ae6884.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars.b1404cfb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jupiter.c147e262.jpg\";","module.exports = __webpack_public_path__ + \"static/media/saturn.278f00b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uranus.0465fbad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/neptune.17c1bff0.jpg\";","import styled, { createGlobalStyle } from 'styled-components';\nimport { Canvas as C } from 'react-three-fiber';\n\nexport default createGlobalStyle`\n  body {\n    margin: 0;\n    background: black;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nexport const Canvas = styled(C)`\n  position: absolute !important;\n  top: 0;\n  left: 0;\n  background: black;\n`;\n","import React from 'react';\n\nfunction Light({ setRef, type, color, intensity }) {\n  return <ambientLight color={color} />;\n}\n\nexport default Light;\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport { useLoader } from 'react-three-fiber';\nimport { TextureLoader, DoubleSide } from 'three';\n\nfunction CelestialObject({\n  setRef,\n  position,\n  scale,\n  textureURL,\n  color,\n  orbitRequired\n}) {\n  const texture = useLoader(TextureLoader, textureURL);\n\n  return (\n    <group>\n      <mesh ref={setRef} position={position}>\n        <sphereBufferGeometry attach='geometry' args={[scale, 32, 32]} />\n        <meshLambertMaterial attach='material' map={texture} />\n      </mesh>\n      {orbitRequired && (\n        <mesh position={position} rotation={[Math.PI / 2, 0, 0]}>\n          <ringBufferGeometry\n            attach='geometry'\n            args={[scale + 500, scale + 500 - 1, 360]}\n          />\n          <meshBasicMaterial\n            attach='material'\n            color={0xffffff}\n            side={DoubleSide}\n          />\n        </mesh>\n      )}\n    </group>\n  );\n}\n\nCelestialObject.propTypes = {\n  setRef: Proptypes.objectOf(Proptypes.any),\n  position: Proptypes.arrayOf(Proptypes.number),\n  scale: Proptypes.number,\n  textureURL: Proptypes.string,\n  color: Proptypes.number,\n  orbitRequired: Proptypes.bool\n};\n\nCelestialObject.defaultProps = {\n  setRef: {},\n  position: [],\n  scale: 3,\n  textureURL: '',\n  color: 0,\n  orbitRequired: false\n};\n\nexport default CelestialObject;\n","import React from 'react';\n\nfunction FallbackMesh() {\n  return <mesh />;\n}\n\nexport default FallbackMesh;\n","import React, { useMemo } from 'react';\nimport * as THREE from 'three';\n\nfunction Stars() {\n  const starsGeometry = new THREE.SphereGeometry(0.5);\n\n  const points = useMemo(\n    () =>\n      new Array(10000).fill().map(() => {\n        const star = new THREE.Vector3();\n\n        star.x = THREE.Math.randFloatSpread(2000);\n        star.y = THREE.Math.randFloatSpread(2000);\n        star.z = THREE.Math.randFloatSpread(2000);\n\n        return star;\n      }),\n    []\n  );\n\n  starsGeometry.setFromPoints(points);\n\n  const starsMaterial = new THREE.PointsMaterial({ color: 0x888888 });\n\n  return <points args={[starsGeometry, starsMaterial]} />;\n}\n\nexport default Stars;\n","import { Vector3, Object3D } from 'three';\nimport { SceneUtils } from 'three/examples/jsm/utils/SceneUtils';\nimport TWEEN from '@tweenjs/tween.js';\n\nclass TravelController {\n  constructor(scene, camera) {\n    this.scene = scene;\n    this.camera = camera;\n    this.travelObjectType = 'planet'; // default\n    this.travelStartEvent = new CustomEvent('solarsystem.travel.start');\n    this.targetPosition = new Vector3();\n    this.threeDiameter = 12756 * 10 ** -3.8;\n    this.core = new Object3D();\n    this.objectCentroid = new Object3D();\n    this.orbitCentroid = new Object3D();\n\n    this.update();\n  }\n\n  // calculateDestinationCoordinates(radius, theta, distanceFromParent) {\n  //   this.r = radius;\n  //   this.x = this.r * Math.cos(theta);\n  //   this.y = this.r * Math.sin(theta);\n\n  //   return {\n  //     x: this.x,\n  //     y: this.y,\n  //     z: 0\n  //   };\n  // }\n\n  calculateDestinationCoordinates() {\n    this.x = this.core.position.x;\n    this.y = this.core.position.y;\n    this.z = this.core.position.z;\n\n    let destinationX = this.x;\n    let destinationY = this.y;\n    const destinationZ = this.z;\n\n    const quadrant1 = this.x > 0 && this.y > 0;\n    const quadrant2 = this.x < 0 && this.y > 0;\n    const quadrant3 = this.x < 0 && this.y < 0;\n    const quadrant4 = this.x > 0 && this.y < 0;\n\n    const offset =\n      this.threeDiameter > 3 ? this.threeDiameter * 6 : this.threeDiameter * 3;\n\n    if (quadrant1) {\n      destinationX += offset;\n      destinationY += offset;\n    }\n\n    if (quadrant2) {\n      destinationX -= offset;\n      destinationY += offset;\n    }\n\n    if (quadrant3) {\n      destinationX -= offset;\n      destinationY -= offset;\n    }\n\n    if (quadrant4) {\n      destinationX += offset;\n      destinationY -= offset;\n    }\n\n    return {\n      x: destinationX,\n      y: destinationY,\n      z: destinationZ + this.threeDiameter * 0.15\n    };\n  }\n\n  dispatchTravelStartEvent(data) {\n    this.event = new CustomEvent('solarsystem.travel.planet.start', {\n      detail: data\n    });\n\n    document.dispatchEvent(this.event);\n  }\n\n  dispatchTravelCompleteEvent(data) {\n    this.event = new CustomEvent('solarsystem.travel.planet.complete', {\n      detail: data\n    });\n\n    document.dispatchEvent(this.event);\n  }\n\n  prepareForTravel(takeOffHeight, targetObject) {\n    const travelDuration = 3000; // 3000;\n\n    const animation = new TWEEN.Tween(this.camera.position).to(\n      {\n        x: this.camera.position.x,\n        y: this.camera.position.y,\n        z: this.camera.position.z - (takeOffHeight + 400)\n      },\n      travelDuration\n    );\n\n    animation\n      .easing(TWEEN.Easing.Cubic.InOut)\n      .onStart(e => console.log('started', e))\n      .onUpdate(() => this.camera.lookAt(targetObject.position));\n\n    return animation;\n  }\n\n  handleComplete(targetObject, cameraTarget) {\n    this.cameraTarget = cameraTarget || this.objectCentroid;\n\n    SceneUtils.detach(this.camera, this.camera.parent, this.scene);\n    SceneUtils.attach(this.camera, this.scene, this.cameraTarget);\n\n    this.camera.lookAt(new Vector3());\n\n    this.core.updateMatrixWorld();\n    this.orbitCentroid.updateMatrixWorld();\n\n    this.dispatchTravelCompleteEvent(targetObject);\n\n    window.cancelAnimationFrame(() => this.update(0));\n  }\n\n  travelToObject(currentPosition, targetObject, takeOffHeight) {\n    const travelDuration = 5000;\n    this.dispatchTravelStartEvent(targetObject);\n\n    // SceneUtils.detach(this.camera, this.camera.parent, this.scene);\n    // SceneUtils.attach(this.camera, this.scene, this.orbitCentroid);\n\n    this.core.updateMatrixWorld();\n    this.orbitCentroid.updateMatrixWorld();\n\n    this.camera.lookAt(targetObject.position);\n\n    this.destinationCoordinates = this.calculateDestinationCoordinates(\n      targetObject\n    );\n    this.takeOff = this.prepareForTravel(takeOffHeight, targetObject);\n\n    this.cameraTarget = this.objectCentroid;\n\n    return this.takeOff.start().onComplete(() => {\n      const cameraTween = new TWEEN.Tween(this.camera.position)\n        .to({ x: 150, y: 5, z: 100 }, travelDuration)\n        .easing(TWEEN.Easing.Cubic.InOut)\n        .onUpdate(\n          // function update() {\n          //   const destinationCoordinates = this.calculateDestinationCoordinates(\n          //     targetObject\n          //   );\n          //   cameraTween.to(destinationCoordinates);\n          //   this.camera.lookAt(targetObject.position);\n          // }.bind(this)\n          () => this.camera.lookAt(targetObject.position)\n        )\n        .onComplete(\n          this.handleComplete.bind(this, targetObject, this.cameraTarget)\n        )\n        .start();\n    });\n  }\n\n  update(delta) {\n    window.requestAnimationFrame(() => this.update());\n    TWEEN.update(delta);\n  }\n}\n\nexport default TravelController;\n","import React, { useRef, Suspense } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\nimport { CameraHelper, DoubleSide, Vector3 } from 'three';\nimport TWEEN from '@tweenjs/tween.js';\n\nimport Light from '../components/Lights';\nimport CelestialObject from '../components/CelestialObject';\nimport FallbackMesh from '../components/FallbackMesh';\nimport Stars from '../components/Stars';\n\nimport SunTexture from '../assets/sun.jpg';\nimport MercuryTexture from '../assets/mercury.jpg';\nimport VenusTexture from '../assets/venus.jpg';\nimport EarthTexture from '../assets/earth.jpg';\nimport MarsTexture from '../assets/mars.jpg';\nimport JupiterTexture from '../assets/jupiter.jpg';\nimport SaturnTexture from '../assets/saturn.jpg';\nimport UranusTexture from '../assets/uranus.jpg';\nimport NeptuneTexture from '../assets/neptune.jpg';\nimport TravelController from '../Controllers/TravelController';\n\nfunction MainScene() {\n  const sunRef = useRef();\n  const mercuryOrbitRef = useRef();\n  const mercuryRef = useRef();\n  const venusOrbitRef = useRef();\n  const venusRef = useRef();\n  const earthOrbitRef = useRef();\n  const earthRef = useRef();\n  const marsOrbitRef = useRef();\n  const marsRef = useRef();\n  const jupiterOrbitRef = useRef();\n  const jupiterRef = useRef();\n  const saturnOrbitRef = useRef();\n  const saturnRef = useRef();\n  const uranusOrbitRef = useRef();\n  const uranusRef = useRef();\n  const neptuneOrbitRef = useRef();\n  const neptuneRef = useRef();\n\n  const { scene, camera } = useThree();\n\n  const travelController = new TravelController(scene, camera);\n\n  camera.fov = 180;\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.near = 0.1;\n  camera.far = 20000;\n\n  camera.position.y = 200;\n  camera.position.z = 800;\n  camera.rotation.y = Math.PI;\n\n  useFrame(({ clock }, delta) => {\n    if (sunRef.current) sunRef.current.rotation.y += delta / 100;\n\n    if (mercuryOrbitRef.current)\n      mercuryOrbitRef.current.rotation.y += delta / 0.88;\n    if (mercuryRef.current) mercuryRef.current.rotation.y += delta / 58.6;\n\n    if (venusOrbitRef.current) venusOrbitRef.current.rotation.y += delta / 2.55;\n    if (venusRef.current) venusRef.current.rotation.y += delta / 243;\n\n    // if (earthOrbitRef.current) earthOrbitRef.current.rotation.y += delta / 3.65;\n    if (earthRef.current) earthRef.current.rotation.y += delta / 0.99;\n\n    if (marsOrbitRef.current) marsOrbitRef.current.rotation.y += delta / 6.86;\n    if (marsRef.current) marsRef.current.rotation.y += delta / 1.03;\n\n    if (jupiterOrbitRef.current)\n      jupiterOrbitRef.current.rotation.y += delta / 43.28;\n    if (jupiterRef.current) jupiterRef.current.rotation.y += delta / 0.41;\n\n    if (saturnOrbitRef.current)\n      saturnOrbitRef.current.rotation.y += delta / 107.52;\n    if (saturnRef.current) saturnRef.current.rotation.y += delta / 0.45;\n\n    if (uranusOrbitRef.current)\n      uranusOrbitRef.current.rotation.y += delta / 306.63;\n    if (uranusRef.current) uranusRef.current.rotation.y += delta / 0.72;\n\n    if (neptuneOrbitRef.current)\n      neptuneOrbitRef.current.rotation.y += delta / 601.48;\n    if (neptuneRef.current) neptuneRef.current.rotation.y += delta / 0.67;\n\n    if (clock.elapsedTime > 6) {\n      // earthOrbitRef.current.position.set(new Vector3(140, 5, 100));\n      // earthRef.current.position.set(new Vector3(140, 5, 100));\n      // earthRef.current.scale.x = 10;\n      // earthRef.current.scale.y = 10;\n      // earthRef.current.scale.z = 10;\n    }\n    travelController.update(delta);\n  });\n\n  setTimeout(() => {\n    if (earthRef.current) {\n      travelController.travelToObject(\n        camera.position,\n        earthRef.current,\n        12756 * 10 ** -3.8 * 2.5\n      );\n    }\n  }, 5000);\n\n  // React.useEffect(() => {\n  //   if (earthRef.current) {\n  //     const travelController = new TravelController(scene, camera);\n  //     travelController.travelToObject(\n  //       camera.position,\n  //       earthRef.current,\n  //       12756 * 10 ** -3.8 * 2.5\n  //     );\n  //   }\n  // });\n\n  return (\n    <>\n      <Light color={0xffffff} />\n      <Stars />\n\n      <object3D>\n        <Suspense fallback={<FallbackMesh />}>\n          <CelestialObject\n            setRef={sunRef}\n            position={[0, 5, 0]}\n            scale={110}\n            textureURL={SunTexture}\n          />\n        </Suspense>\n\n        <object3D ref={mercuryOrbitRef}>\n          <Suspense fallback={<FallbackMesh />}>\n            <CelestialObject\n              setRef={mercuryRef}\n              position={[120, 5, 0]}\n              scale={0.38}\n              textureURL={MercuryTexture}\n              // orbitRequired\n            />\n          </Suspense>\n        </object3D>\n\n        <object3D ref={venusOrbitRef}>\n          <Suspense fallback={<FallbackMesh />}>\n            <CelestialObject\n              setRef={venusRef}\n              position={[-130, 5, 40]}\n              scale={0.94}\n              textureURL={VenusTexture}\n              // orbitRequired\n            />\n          </Suspense>\n        </object3D>\n\n        <object3D ref={earthOrbitRef}>\n          <Suspense fallback={<FallbackMesh />}>\n            <CelestialObject\n              setRef={earthRef}\n              position={[140, 5, 100]}\n              scale={1}\n              textureURL={EarthTexture}\n            />\n          </Suspense>\n        </object3D>\n\n        <object3D ref={marsOrbitRef}>\n          <Suspense fallback={<FallbackMesh />}>\n            <CelestialObject\n              setRef={marsRef}\n              position={[150, 5, -120]}\n              scale={0.53}\n              textureURL={MarsTexture}\n            />\n          </Suspense>\n        </object3D>\n\n        <object3D ref={jupiterOrbitRef}>\n          <Suspense fallback={<FallbackMesh />}>\n            <CelestialObject\n              setRef={jupiterRef}\n              position={[190, 5, 150]}\n              scale={11}\n              textureURL={JupiterTexture}\n              // orbitRequired\n            />\n          </Suspense>\n        </object3D>\n\n        <object3D ref={saturnOrbitRef}>\n          <Suspense fallback={<FallbackMesh />}>\n            <CelestialObject\n              setRef={saturnRef}\n              position={[-250, 5, -170]}\n              scale={9.1}\n              textureURL={SaturnTexture}\n              // orbitRequired\n            />\n          </Suspense>\n        </object3D>\n\n        <object3D ref={uranusOrbitRef}>\n          <Suspense fallback={<FallbackMesh />}>\n            <CelestialObject\n              setRef={uranusRef}\n              position={[-300, 5, 190]}\n              scale={3.9}\n              textureURL={UranusTexture}\n              // orbitRequired\n            />\n          </Suspense>\n        </object3D>\n\n        <object3D ref={neptuneOrbitRef}>\n          <Suspense fallback={<FallbackMesh />}>\n            <CelestialObject\n              setRef={neptuneRef}\n              position={[350, 5, -210]}\n              scale={3.8}\n              textureURL={NeptuneTexture}\n              // orbitRequired\n            />\n          </Suspense>\n        </object3D>\n      </object3D>\n    </>\n  );\n}\n\nexport default MainScene;\n","import React, { useRef } from 'react';\nimport { extend, useThree, useRender } from 'react-three-fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nextend({ OrbitControls });\n\nfunction Controls() {\n  const ref = useRef();\n  const { camera, gl } = useThree();\n\n  useRender(() => ref.current.update());\n\n  return (\n    <orbitControls\n      ref={ref}\n      args={[camera, gl.domElement]}\n      enableDamping\n      dampingFactor={0.1}\n      rotateSpeed={0.5}\n    />\n  );\n}\n\nexport default Controls;\n","import React from 'react';\nimport { Canvas } from './GlobalStyles';\nimport MainScene from './views/MainScene';\n// import EarthScene from './views/EarthScene';\nimport Controls from './components/Controls';\n\nfunction App() {\n  return (\n    <Canvas>\n      <MainScene />\n      {/* <EarthScene /> */}\n      <Controls />\n    </Canvas>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyles from './GlobalStyles';\n\nReactDOM.render(\n  <>\n    <GlobalStyles />\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}